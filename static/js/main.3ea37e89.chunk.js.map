{"version":3,"sources":["Weather.js","requests.js","App.js","index.js"],"names":["Weather","props","formatDay","timestamp","datetime","Date","getDate","getMonth","formatTime","hours","getHours","minutes","getMinutes","changefocusedForecast","forecast","setState","focusedForecastDt","dt","state","forecasts","Promise","resolve","fetch","process","then","response","status","Error","json","catch","error","console","warn","log","list","className","key","onClick","this","Math","round","main","temp","src","weather","icon","alt","focusedWeather","find","f","description","map","renderWeatherItem","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ea37e89.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport {getForecasts} from './requests'\r\nimport './Weather.css'\r\n\r\nclass Weather extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      forecasts: null,\r\n      focusedForecastDt: null\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    getForecasts().then(forecasts => {\r\n      console.log(forecasts) //testaus\r\n      this.setState({ forecasts: forecasts, focusedForecastDt: forecasts.list[0].dt })\r\n    })\r\n  }\r\n\r\n  formatDay = timestamp => {\r\n  const datetime = new Date(timestamp*1000)\r\n  const day = datetime.getDate()\r\n  const month = datetime.getMonth()+1\r\n  return day + '.' + month\r\n}\r\n\r\nformatTime = timestamp => {\r\n  const datetime = new Date(timestamp*1000)\r\n  const hours = datetime.getHours()\r\n  let minutes = datetime.getMinutes()\r\n  if (minutes < 10) {\r\n    minutes = '0' + minutes\r\n  }\r\n  return hours + ':' + minutes\r\n}\r\n\r\n  renderWeatherItem(forecast) {\r\n    return (\r\n      <div className=\"Weather_box\" key={forecast.dt} onClick={() => this.changefocusedForecast(forecast)}>\r\n        <div className=\"Weather_day\">{this.formatDay(forecast.dt)}</div>\r\n        <div className=\"Weather_time\">{this.formatTime(forecast.dt)}</div>\r\n        <div className=\"Weather_temp\">{Math.round(forecast.main.temp)}°</div>\r\n        <img src={'http://openweathermap.org/img/wn/'+forecast.weather[0].icon+'.png'} alt=\"Logo\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\nchangefocusedForecast = forecast => {\r\n  this.setState({focusedForecastDt: forecast.dt})\r\n}\r\n\r\n  render() {\r\n    const forecasts = this.state.forecasts\r\n    const focusedForecastDt = this.state.focusedForecastDt\r\n    if (!forecasts) return null\r\n    console.log(forecasts)\r\n\r\n    const focusedWeather = forecasts.list.find(f => f.dt === focusedForecastDt)\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"Weather\">\r\n        <div className=\"Weather_focused\">\r\n          <div className=\"Weather_day\">{this.formatDay(focusedWeather.dt)}</div>\r\n          <div className=\"Weather_time\">{this.formatTime(focusedWeather.dt)}</div>\r\n          <div className=\"Weather_temp\">{Math.round(focusedWeather.main.temp)}</div>\r\n          <div className=\"Weather_desc\">{focusedWeather.weather[0].description}</div>\r\n          <img src ='http://openweathermap.org/img/wn/09d.png' alt=\"Logo\" />\r\n        </div>\r\n\r\n        <div className=\"Weather_forecast\">\r\n          { forecasts.list.map(forecast => this.renderWeatherItem(forecast)) }\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"Weather_forecast\">\r\n\r\n          <div className=\"Weather_box\">\r\n            <div className=\"Weather_day\">ma</div>\r\n            <div className=\"Weather_time\">15:00</div>\r\n            <div className=\"Weather_temp\">16°</div>\r\n            <img src='http://openweathermap.org/img/wn/09d.png' alt=\"Logo\" />\r\n          </div>\r\n          <div className=\"Weather_box\">\r\n            <div className=\"Weather_day\">ma</div>\r\n            <div className=\"Weather_time\">18:00</div>\r\n            <div className=\"Weather_temp\">15°</div>\r\n            <img src='http://openweathermap.org/img/wn/09d.png' alt=\"Logo\" />\r\n          </div>\r\n          <div className=\"Weather_box\">\r\n            <div className=\"Weather_day\">ma</div>\r\n            <div className=\"Weather_time\">21:00</div>\r\n            <div className=\"Weather_temp\">14°</div>\r\n            <img src='http://openweathermap.org/img/wn/09d.png' alt=\"Logo\" />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Weather\r\n","export const API_KEY = process.env.REACT_APP_KEY\r\n\r\nexport const getForecasts = () => new Promise(resolve => {\r\n  fetch(`http://api.openweathermap.org/data/2.5/forecast?id=658225&APPID=${API_KEY}&units=metric&lang=fi`)\r\n    .then(response => {\r\n      if (response.status !== 200) throw new Error(response.status)\r\n      return response.json()\r\n    })\r\n    .then(response => {\r\n      resolve(response)\r\n    })\r\n    .catch(error => {\r\n      console.warn(error)\r\n    })\r\n  })\r\n","import React from 'react';\r\nimport Weather from './Weather'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Sää\r\n      </header>\r\n      <Weather/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}